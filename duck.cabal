Name:		duck
Version:	0.1
Author:		Geoffrey Irving
Maintainer:     irving@naml.us
License:        BSD3
license-file:	LICENSE
Synopsis:	Functional, semi-typed, JIT-compiled language
Description:	Duck is (will be) a functional, semi-typed, JIT-compiled language designed around heavy use of overloading.
Category:	Compilers/Interpreters
Build-Type:	Simple
Cabal-Version:	>= 1.2
tested-with:    GHC == 6.10.3
extra-source-files: README, duck/*.duck, duck/test/*.duck

Flag debug
    Description: Enable debug support
    Default:     True

Flag boehm
    Description: Use the Boehm GC
    Default:     False

Executable duck
    Main-is:		Duck.hs
    Build-Depends:	base >= 4 && < 5, containers, pretty, array, mtl, filepath, directory, haskell-src
    other-modules:
        Util
        Pretty
        Memory
        Gen.Var
        Gen.SrcLoc
        SrcLoc
        Var
        Token
        Stage
        ParseMonad
        ParseOps
        Gen.Type
        Gen.Prims
        Type
        Ast
        ToHaskell
        Prims
        Ir
        Gen.Lir
        Ptrie
        Lir
        ToLir
        InferMonad
        Gen.Value
        Value
        Prettyval
        ExecMonad
        Base
        TypeSet
        Infer
        Interp
        Lex
        Layout
        Parse
    hs-source-dirs:	duck
    c-sources:          duck/runtime.c
    if flag(debug)
        ghc-options:	-Wall -fwarn-tabs -fno-warn-missing-signatures -fno-warn-name-shadowing
    if flag(boehm)
        cpp-options:     -DUSE_BOEHM
        extra-libraries: gc
