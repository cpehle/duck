-- Duck prelude

infixr 9  .
infixr 8  ^, ^^, **
infixl 7  *, /
infixl 6  +, -
infixr 5  :
infix  4  ==, /=, <, <=, >=, >
infixr 3  &&
infixr 2  ||
infixl 1  >>, >>=
infixr 1  =<<
infixr 0  $, $!

-- Units

data () = ()

-- Lists

data [a] = [] | a : [a]

over (a -> b) -> [a] -> [b]
let map f l = case l of
    [] -> []
  | x:l -> f x : map f l
