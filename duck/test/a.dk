import prelude

over Int -> Int -> Int
let f x y =
  let g y = y * y in
  x + g y

over (Int -> Int) -> Int
let h x = 3

let x = 3
let _ = 4
let a = f x x

let g = \x -> x

-- tuples

let t1,t2,t3 = 1,2,(1,2) :: (Int,Int)

-- lists

let list = 1 : [2, 3, 4]
let ten = sum list
let one : two : _ = list

-- test map overloading

let negate x = 0 - x

let la = map negate [3,4]
let ma = map negate (Just 5)
