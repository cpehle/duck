-- | Duck interpreter values

import var
import type
import lir
import prims

-- In order to simplify the low level representation, the type and variable
-- environments in ValDelay and ValBindIO are stored lists of (Var,TypeVal,Value)
-- trips.  The set of variables is exactly the free variables of the expression
-- as computed by Lir.free.

data FunValue of
  ValClosure Var (List TypeVal) (List Value) -- ^ Partially applied function (note that values are post-trans, and types are pre-trans)
  ValDelay Exp (List (Var, TypeVal, Value)) -- ^ Delay (lazy) evaluation.

-- Monadic IO
data IOValue of
  ValLiftIO Value -- ^ lifted (returned) value within IO monad
  ValPrimIO Prim (List Value) -- ^ Closure of unexecuted IO call
  ValBindIO Var TypeVal IOValue Exp (List (Var, TypeVal, Value)) -- ^ Unexecuted IO binding
